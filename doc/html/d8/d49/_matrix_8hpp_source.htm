<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>CrazyCrush: Código-Fonte de src/Matrix.hpp</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">CrazyCrush
   &#160;<span id="projectnumber">1.0.7</span>
   </div>
   <div id="projectbrief">Um simples jogo</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Gerado por Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Busca');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.htm"><span>Página&#160;Principal</span></a></li>
      <li><a href="../../namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.htm"><span>Arquivos</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Busca" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.htm"><span>Lista&#160;de&#160;Arquivos</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>Todos</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Funções</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variáveis</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_68267d1309a1af8e8297ef4c3efbcdba.htm">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Matrix.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/* Universidade Federal do Rio de Janeiro</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Escola Politécnica</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * Departamento de Eletrônica e Computação</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * Prof. Fernando Silva</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * EEL 670 - Linguagem de Programação</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * Authors: Daniel Dahis     (dahisdaniel@poli.ufrj.br)</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *          Leonan França    (leonancfr@poli.ufrj.br)</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *          Gustavo Silva    (diguser@gmail.com)</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *          Michael Douglas  (michaeldouglas@poli.ufrj.br)</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#ifndef _MATRIX_HPP_</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define _MATRIX_HPP_ 1</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#ifdef DEBUG</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor"></span><span class="preprocessor">  #include&lt;iostream&gt;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#define DATA_OUT_OF_RANGE           -1</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ACCESS_INVALID_LINE         -2</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ACCESS_INVALID_COLUM        -3</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ACCESS_INVALID_OUT_OF_RANGE -4</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define INVALID_ORDER               -5</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define INVALID_MATRIX_SIZE         -6</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="../../dd/d8b/struct_matrix_position.htm">   28</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../dd/d8b/struct_matrix_position.htm">MatrixPosition</a> {</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="keywordtype">int</span> i,j;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;};</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm">   41</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d6/d3f/class_matrix.htm">Matrix</a>{</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <span class="keyword">private</span>:</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    std::vector&lt;T&gt; matrix;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordtype">unsigned</span> lines,columns;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="keyword">public</span>:</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="../../d6/d3f/class_matrix.htm#a9d567e3a121b1be0c3f9c461cab524fe">Matrix</a>();</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="../../d6/d3f/class_matrix.htm#a9d567e3a121b1be0c3f9c461cab524fe">Matrix</a>(<span class="keywordtype">unsigned</span> <span class="keyword">const</span> lines,<span class="keywordtype">unsigned</span> <span class="keyword">const</span> columns);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <a class="code" href="../../d6/d3f/class_matrix.htm#a9d567e3a121b1be0c3f9c461cab524fe">Matrix</a>(<span class="keywordtype">unsigned</span> <span class="keyword">const</span> lines,<span class="keywordtype">unsigned</span> <span class="keyword">const</span> columns,T value);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    ~<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix</a>();</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="../../d6/d3f/class_matrix.htm#ae8ee96cb7bf5db514f6038e213403a4c">resize</a>(<span class="keywordtype">unsigned</span> lines,<span class="keywordtype">unsigned</span> columns);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keyword">typename</span> std::vector&lt;T&gt;::reference <a class="code" href="../../d6/d3f/class_matrix.htm#abaa9af9b23ee648fabba8834ca58c455">at</a>(<span class="keywordtype">unsigned</span> <span class="keyword">const</span> i,<span class="keywordtype">unsigned</span> <span class="keyword">const</span> j);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; <a class="code" href="../../d6/d3f/class_matrix.htm#aa66022e7f937519b9155bca2eda2e531">operator=</a>(<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; other);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; <a class="code" href="../../d6/d3f/class_matrix.htm#ae19907e2ac28042ebf877cad40193a72">operator+=</a>(<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; other);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; <a class="code" href="../../d6/d3f/class_matrix.htm#a11fd7dd911127f2548dfe9940fe592c2">operator*</a>(<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; other);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; <a class="code" href="../../d6/d3f/class_matrix.htm#a11fd7dd911127f2548dfe9940fe592c2">operator*</a>(T&amp; value);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; <a class="code" href="../../d6/d3f/class_matrix.htm#aca9c43aacf7efbdc17fda429d52b7e58">operator-</a>(<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; other);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; <a class="code" href="../../d6/d3f/class_matrix.htm#a4269762820f692017d96a3978336d8a2">operator+</a>(<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; other);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; <a class="code" href="../../d6/d3f/class_matrix.htm#a7d960f17eb693c989a104fe338575b36">operator/</a>(T&amp;);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; <a class="code" href="../../d6/d3f/class_matrix.htm#aba626c56e96ed01060bb634dfc193420">subMatrix</a>(<span class="keywordtype">unsigned</span> <span class="keyword">const</span> start_i,<span class="keywordtype">unsigned</span> <span class="keyword">const</span> start_j,<span class="keywordtype">unsigned</span> <span class="keyword">const</span> final_i,<span class="keywordtype">unsigned</span> <span class="keyword">const</span> final_j);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; <a class="code" href="../../d6/d3f/class_matrix.htm#aba626c56e96ed01060bb634dfc193420">subMatrix</a>(<span class="keywordtype">unsigned</span> <span class="keyword">const</span> start_i,<span class="keywordtype">unsigned</span> <span class="keyword">const</span> start_j);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    </div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; <a class="code" href="../../d6/d3f/class_matrix.htm#a220144d29bb52bd0a40c64243273f8d0">getColumn</a>(<span class="keywordtype">unsigned</span> <span class="keyword">const</span> j);</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../d6/d3f/class_matrix.htm#afdb027e3ffa1391a7e9343a5c412007b">addColumns</a>(<span class="keywordtype">unsigned</span> <span class="keyword">const</span> m);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../d6/d3f/class_matrix.htm#ad2e5a68e8e420bae911d0ce6b735fe96">addLines</a>(<span class="keywordtype">unsigned</span> <span class="keyword">const</span> n);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../d6/d3f/class_matrix.htm#a64399359a44e443925eb39953766b499">remLine</a>(<span class="keywordtype">unsigned</span> <span class="keyword">const</span> i);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../d6/d3f/class_matrix.htm#ae47fea43f6fcb62fe04a63f5d5a719f9">appendColumnInLine</a>(<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; other,<span class="keywordtype">unsigned</span> <span class="keyword">const</span> column,<span class="keywordtype">unsigned</span> <span class="keyword">const</span> line,<span class="keywordtype">unsigned</span> <span class="keyword">const</span> start);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../d6/d3f/class_matrix.htm#a9fd0ae7fdc4b6d9975023b30289913a4">appendMatrix</a>(<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; other,<span class="keywordtype">unsigned</span> <span class="keyword">const</span> line,<span class="keywordtype">unsigned</span> <span class="keyword">const</span> column);</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    </div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keywordtype">unsigned</span> <a class="code" href="../../d6/d3f/class_matrix.htm#a34fc6c1821aa3e07d738053b1d734e1a">getColumns</a>();</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    </div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keywordtype">unsigned</span> <a class="code" href="../../d6/d3f/class_matrix.htm#adbb6521184032bd2bc467aeb4c092d88">getLines</a>();</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    </div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="preprocessor">    #ifdef DEBUG</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="preprocessor"></span>    <span class="keywordtype">void</span> debug();</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="preprocessor"></span>    </div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="../../d6/d3f/class_matrix.htm#ac255da475227b8dc41411c4680276b1c">fill</a>(T value);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    </div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    T&amp; <a class="code" href="../../d6/d3f/class_matrix.htm#ad09c4c2b134c1357cf4c67d79775df5e">toValue</a>();</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;};</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00227"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm#a9d567e3a121b1be0c3f9c461cab524fe">  227</a></span>&#160;<a class="code" href="../../d6/d3f/class_matrix.htm#a9d567e3a121b1be0c3f9c461cab524fe">Matrix&lt;T&gt;::Matrix</a>(){this-&gt;lines=0;this-&gt;columns=0;}</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;::~Matrix</a>(){}</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00233"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm#a5917d57808404b1c7c42e1a4471688cd">  233</a></span>&#160;<a class="code" href="../../d6/d3f/class_matrix.htm#a9d567e3a121b1be0c3f9c461cab524fe">Matrix&lt;T&gt;::Matrix</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> l, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> c){</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;  <span class="keywordflow">if</span>(c*l &gt; matrix.max_size()){</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="preprocessor">    #ifdef DEBUG</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="preprocessor"></span>      std::cout &lt;&lt; <span class="stringliteral">&quot;MATRIX ERROR: Unable to initialize matrix with &quot;</span>&lt;&lt;l&lt;&lt;<span class="stringliteral">&quot; lines and &quot;</span>&lt;&lt;c&lt;&lt;<span class="stringliteral">&quot; columns.&quot;</span>&lt;&lt;std::endl&lt;&lt;<span class="stringliteral">&quot;Limit is &quot;</span>&lt;&lt;matrix.max_size()&lt;&lt;<span class="stringliteral">&quot; cells.&quot;</span>&lt;&lt;std::endl;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">throw</span> DATA_OUT_OF_RANGE;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;  }</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  this-&gt;lines = l;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;  this-&gt;columns = c;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;  this-&gt;matrix.resize(l*c);</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;}</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00246"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm#a08ab1520859f31fb67717bd49c0030ab">  246</a></span>&#160;<a class="code" href="../../d6/d3f/class_matrix.htm#a9d567e3a121b1be0c3f9c461cab524fe">Matrix&lt;T&gt;::Matrix</a>(<span class="keywordtype">unsigned</span> <span class="keyword">const</span> l,<span class="keywordtype">unsigned</span> <span class="keyword">const</span> c,T def){</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;  <span class="keywordflow">if</span>(c*l &gt; matrix.max_size()){</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="preprocessor">    #ifdef DEBUG</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="preprocessor"></span>      std::cout &lt;&lt; <span class="stringliteral">&quot;MATRIX ERROR: Unable to initialize matrix with &quot;</span>&lt;&lt;l&lt;&lt;<span class="stringliteral">&quot; lines and &quot;</span>&lt;&lt;c&lt;&lt;<span class="stringliteral">&quot; columns.&quot;</span>&lt;&lt;std::endl&lt;&lt;<span class="stringliteral">&quot;Limit is &quot;</span>&lt;&lt;matrix.max_size()&lt;&lt;<span class="stringliteral">&quot; cells.&quot;</span>&lt;&lt;std::endl;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">throw</span> DATA_OUT_OF_RANGE;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;  }</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;  this-&gt;lines = l;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;  this-&gt;columns = c;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  this-&gt;matrix.resize(l*c);</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;  <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> i=0;i&lt;l*c;i++)</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    this-&gt;matrix.at(i) = def;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;}</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00261"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm#ae8ee96cb7bf5db514f6038e213403a4c">  261</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d3f/class_matrix.htm#ae8ee96cb7bf5db514f6038e213403a4c">Matrix&lt;T&gt;::resize</a>(<span class="keywordtype">unsigned</span> <span class="keyword">const</span> l, <span class="keywordtype">unsigned</span> <span class="keyword">const</span> c){</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;  <span class="keywordflow">if</span>(c*l &gt; matrix.max_size()){</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="preprocessor">    #ifdef DEBUG</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="preprocessor"></span>      std::cout &lt;&lt; <span class="stringliteral">&quot;MATRIX ERROR: Unable to initialize matrix with &quot;</span>&lt;&lt;l&lt;&lt;<span class="stringliteral">&quot; lines and &quot;</span>&lt;&lt;c&lt;&lt;<span class="stringliteral">&quot; columns.&quot;</span>&lt;&lt;std::endl&lt;&lt;<span class="stringliteral">&quot;Limit is &quot;</span>&lt;&lt;matrix.max_size()&lt;&lt;<span class="stringliteral">&quot; cells.&quot;</span>&lt;&lt;std::endl;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">throw</span> DATA_OUT_OF_RANGE;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;  }</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;  this-&gt;lines = l;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;  this-&gt;columns = c;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;  this-&gt;matrix.resize(l*c);</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;}</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00274"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm#abaa9af9b23ee648fabba8834ca58c455">  274</a></span>&#160;<span class="keyword">typename</span> std::vector&lt;T&gt;::reference <a class="code" href="../../d6/d3f/class_matrix.htm#abaa9af9b23ee648fabba8834ca58c455">Matrix&lt;T&gt;::at</a>(<span class="keywordtype">unsigned</span> l, <span class="keywordtype">unsigned</span> c){</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;  <span class="keywordflow">if</span>(l &gt;= this-&gt;lines){</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="preprocessor">    #ifdef DEBUG</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="preprocessor"></span>      std::cout&lt;&lt;<span class="stringliteral">&quot;MATRIX ERROR: Access line #&quot;</span>&lt;&lt;l&lt;&lt;<span class="stringliteral">&quot; but limit is &quot;</span>&lt;&lt;this-&gt;lines&lt;&lt;<span class="stringliteral">&quot; lines, including line zero&quot;</span>&lt;&lt;std::endl;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">throw</span> ACCESS_INVALID_LINE;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;  }</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;  <span class="keywordflow">if</span>(c &gt;= this-&gt;columns){</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="preprocessor">    #ifdef DEBUG</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="preprocessor"></span>      std::cout&lt;&lt;<span class="stringliteral">&quot;MATRIX ERROR: Access column #&quot;</span>&lt;&lt;c&lt;&lt;<span class="stringliteral">&quot; but limit is &quot;</span>&lt;&lt;this-&gt;columns&lt;&lt;<span class="stringliteral">&quot; columns, including column zero&quot;</span>&lt;&lt;std::endl;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">throw</span> ACCESS_INVALID_COLUM;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;  }</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;  std::size_t pos=c+l*this-&gt;columns;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;  <span class="keywordflow">if</span>(pos &gt;= this-&gt;matrix.size()){</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="preprocessor">    #ifdef DEBUG</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="preprocessor"></span>      std::cout&lt;&lt;<span class="stringliteral">&quot;MATRIX ERROR: Accessing element out of Matrix range: line #&quot;</span>&lt;&lt;l&lt;&lt;<span class="stringliteral">&quot; column #&quot;</span>&lt;&lt;c&lt;&lt;std::endl;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">throw</span> ACCESS_INVALID_OUT_OF_RANGE;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;  }</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;  <span class="keywordflow">return</span> matrix[pos];</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;}</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="preprocessor">#ifdef DEBUG</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="preprocessor"></span><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;::debug</a>(){</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;  std::cout&lt;&lt;std::endl&lt;&lt;<span class="stringliteral">&quot; === Debugging Matrix ===&quot;</span>&lt;&lt;std::endl;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;  <span class="keywordflow">if</span>(this-&gt;matrix.size() == 0){</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;  Matrix is empty&quot;</span>&lt;&lt;std::endl;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;  }</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;  std::cout&lt;&lt;<span class="stringliteral">&quot;{&quot;</span>;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;  <span class="keywordflow">for</span>(std::size_t i=0;i&lt;this-&gt;lines;i++){</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    std::cout&lt;&lt;<span class="stringliteral">&quot;[&quot;</span>&lt;&lt;this-&gt;at(i,0);</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <span class="keywordflow">for</span>(std::size_t j=1;j&lt;this-&gt;columns;j++){</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;      std::cout&lt;&lt;<span class="stringliteral">&quot;,&quot;</span>&lt;&lt;this-&gt;at(i,j);</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    }</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    std::cout&lt;&lt;<span class="stringliteral">&quot;]&quot;</span>;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keywordflow">if</span>(i != (this-&gt;lines-1))</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;      std::cout&lt;&lt;<span class="stringliteral">&quot;\n&quot;</span>;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;  }</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;  std::cout&lt;&lt;<span class="stringliteral">&quot;}&quot;</span>&lt;&lt;std::endl;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;}</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00320"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm#ad2e5a68e8e420bae911d0ce6b735fe96">  320</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d6/d3f/class_matrix.htm#ad2e5a68e8e420bae911d0ce6b735fe96">Matrix&lt;T&gt;::addLines</a>(<span class="keywordtype">unsigned</span> <span class="keyword">const</span> lines){</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;  <span class="keywordflow">if</span>((this-&gt;lines+lines)*this-&gt;columns &gt;= this-&gt;matrix.max_size())</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;  this-&gt;lines += lines;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;  this-&gt;matrix.resize(this-&gt;columns*this-&gt;lines);</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;}</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00329"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm#afdb027e3ffa1391a7e9343a5c412007b">  329</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d6/d3f/class_matrix.htm#afdb027e3ffa1391a7e9343a5c412007b">Matrix&lt;T&gt;::addColumns</a>(<span class="keywordtype">unsigned</span> <span class="keyword">const</span> columns){</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;  <span class="keywordflow">if</span>((this-&gt;columns+columns)*this-&gt;lines &gt;= this-&gt;matrix.max_size())</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;  this-&gt;matrix.resize((this-&gt;columns+columns)*this-&gt;lines);</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;  <span class="keywordtype">unsigned</span> jump = (this-&gt;lines-1)*(columns);</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;  <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> i=(this-&gt;columns*this-&gt;lines)-1;i&gt;=this-&gt;columns;i--){</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    this-&gt;matrix.at(i+jump) = this-&gt;matrix.at(i);</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    this-&gt;matrix.at(i) = T();</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <span class="keywordflow">if</span>(i%this-&gt;columns == 0)</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;      jump -= columns;</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;  }</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;  this-&gt;columns += columns;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;}</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00345"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm#a64399359a44e443925eb39953766b499">  345</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d6/d3f/class_matrix.htm#a64399359a44e443925eb39953766b499">Matrix&lt;T&gt;::remLine</a>(<span class="keywordtype">unsigned</span> <span class="keyword">const</span> line){</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;  <span class="keywordflow">if</span>(line &gt;= this-&gt;lines)</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;  <span class="keywordflow">for</span>(std::size_t i = line*this-&gt;columns; i&lt;(this-&gt;matrix.size()-this-&gt;columns);i++){</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    this-&gt;matrix[i] = this-&gt;matrix[i+this-&gt;columns];</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;  }</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;  this-&gt;lines--;</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;  this-&gt;matrix.resize(this-&gt;lines*this-&gt;columns);</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;}</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00357"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm#aa66022e7f937519b9155bca2eda2e531">  357</a></span>&#160;<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; <a class="code" href="../../d6/d3f/class_matrix.htm#aa66022e7f937519b9155bca2eda2e531">Matrix&lt;T&gt;::operator=</a>(<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; mx){</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;  this-&gt;resize(mx.lines,mx.columns);</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;  <span class="keywordflow">for</span>(std::size_t i =0;i&lt;mx.matrix.size();i++){</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    this-&gt;matrix[i] = mx.matrix[i];</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;  }</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;  <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;}</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00366"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm#ae47fea43f6fcb62fe04a63f5d5a719f9">  366</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d6/d3f/class_matrix.htm#ae47fea43f6fcb62fe04a63f5d5a719f9">Matrix&lt;T&gt;::appendColumnInLine</a>(<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; mx,<span class="keywordtype">unsigned</span> <span class="keyword">const</span> column,<span class="keywordtype">unsigned</span> <span class="keyword">const</span> line,<span class="keywordtype">unsigned</span> <span class="keyword">const</span> start){</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;  <span class="keywordflow">if</span>(this-&gt;columns &lt; start+mx.lines)</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;  <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> i=0;i&lt;mx.lines;i++){</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    *(this-&gt;at(line,start+i)) = *(mx.<a class="code" href="../../d6/d3f/class_matrix.htm#abaa9af9b23ee648fabba8834ca58c455">at</a>(i,column));</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;  }</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;}</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00376"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm#ae19907e2ac28042ebf877cad40193a72">  376</a></span>&#160;<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; <a class="code" href="../../d6/d3f/class_matrix.htm#ae19907e2ac28042ebf877cad40193a72">Matrix&lt;T&gt;::operator+=</a>(<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; mx){</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;  <span class="keywordflow">if</span>((mx.lines != this-&gt;lines)||(mx.columns != this-&gt;columns))</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <span class="keywordflow">throw</span> INVALID_MATRIX_SIZE;</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;  <span class="keywordflow">for</span>(std::size_t i=0;i&lt;this-&gt;matrix.size();i++){</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    this-&gt;matrix[i] += mx.matrix[i];</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;  }</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;  <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;}</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00386"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm#aba626c56e96ed01060bb634dfc193420">  386</a></span>&#160;<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; <a class="code" href="../../d6/d3f/class_matrix.htm#aba626c56e96ed01060bb634dfc193420">Matrix&lt;T&gt;::subMatrix</a>(<span class="keywordtype">unsigned</span> <span class="keyword">const</span> sl,<span class="keywordtype">unsigned</span> <span class="keyword">const</span> sc,<span class="keywordtype">unsigned</span> <span class="keyword">const</span> el,<span class="keywordtype">unsigned</span> <span class="keyword">const</span> ec){</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;  <span class="keywordflow">if</span>((sl &gt;= this-&gt;lines)||(el &gt; this-&gt;lines)||(sc &gt;= this-&gt;columns)||(ec &gt; this-&gt;columns)){</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="preprocessor">    #ifdef DEBUG</span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="preprocessor"></span>      std::cout&lt;&lt;<span class="stringliteral">&quot;MATRIX ERROR: Accessing element out of matrix range.&quot;</span>&lt;&lt;std::endl;</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">throw</span> ACCESS_INVALID_OUT_OF_RANGE;</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;  }</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;  <span class="keywordflow">if</span>((el &lt;= sl)||(ec &lt;= sc)){</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="preprocessor">    #ifdef DEBUG</span></div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="preprocessor"></span>      std::cout&lt;&lt;<span class="stringliteral">&quot;MATRIX ERROR: Order to split matrix is invalid.&quot;</span>&lt;&lt;std::endl;</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">throw</span> INVALID_ORDER;</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;  }</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;  <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a> *tmp;</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;  tmp = <span class="keyword">new</span> <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>(el-sl,ec-sc);</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;  <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> i=sl;i&lt;el;i++){</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> j=sc;j&lt;ec;j++){</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;      tmp-&gt;<a class="code" href="../../d6/d3f/class_matrix.htm#abaa9af9b23ee648fabba8834ca58c455">at</a>(i-sl,j-sc) = this-&gt;at(i,j);</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    }</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;  }</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;  <span class="keywordflow">return</span> *tmp;</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;}</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00410"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm#a959f1b38ac39141cbe245f09a11c5780">  410</a></span>&#160;<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; <a class="code" href="../../d6/d3f/class_matrix.htm#aba626c56e96ed01060bb634dfc193420">Matrix&lt;T&gt;::subMatrix</a>(<span class="keywordtype">unsigned</span> <span class="keyword">const</span> sl,<span class="keywordtype">unsigned</span> <span class="keyword">const</span> sc){</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;  <span class="keywordflow">return</span> this-&gt;subMatrix(sl,sc,this-&gt;lines,this-&gt;columns);</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;}</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00415"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm#a220144d29bb52bd0a40c64243273f8d0">  415</a></span>&#160;<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; <a class="code" href="../../d6/d3f/class_matrix.htm#a220144d29bb52bd0a40c64243273f8d0">Matrix&lt;T&gt;::getColumn</a>(<span class="keywordtype">unsigned</span> <span class="keyword">const</span> column){</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;  <span class="keywordflow">if</span>(column &gt;= this-&gt;columns)</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    <span class="keywordflow">throw</span> ACCESS_INVALID_OUT_OF_RANGE;</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;  <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a> *tmp;</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;  tmp = <span class="keyword">new</span> <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>(this-&gt;lines,1);</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;  <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> i=0;i&lt;this-&gt;lines;i++)</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    tmp-&gt;<a class="code" href="../../d6/d3f/class_matrix.htm#abaa9af9b23ee648fabba8834ca58c455">at</a>(i,0) = this-&gt;at(i,column);</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;  <span class="keywordflow">return</span> *tmp;</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;}</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00426"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm#a9fd0ae7fdc4b6d9975023b30289913a4">  426</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d6/d3f/class_matrix.htm#a9fd0ae7fdc4b6d9975023b30289913a4">Matrix&lt;T&gt;::appendMatrix</a>(<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; mx,<span class="keywordtype">unsigned</span> <span class="keyword">const</span> line,<span class="keywordtype">unsigned</span> <span class="keyword">const</span> column){</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;  <span class="keywordflow">if</span>((mx.lines+line &gt; this-&gt;lines)||(mx.columns+column &gt; this-&gt;columns))</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;  <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> i=0;i&lt;mx.lines;i++){</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> j=0;j&lt;mx.columns;j++)</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;      this-&gt;at(line+i,column+j) = mx.<a class="code" href="../../d6/d3f/class_matrix.htm#abaa9af9b23ee648fabba8834ca58c455">at</a>(i,j);</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;  }</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;}</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00437"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm#a11fd7dd911127f2548dfe9940fe592c2">  437</a></span>&#160;<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; <a class="code" href="../../d6/d3f/class_matrix.htm#a11fd7dd911127f2548dfe9940fe592c2">Matrix&lt;T&gt;::operator*</a>(<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; mx){</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;  <span class="keywordflow">if</span>(this-&gt;columns != mx.lines){</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="preprocessor">    #ifdef DEBUG</span></div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="preprocessor"></span>      std::cout&lt;&lt;<span class="stringliteral">&quot;MATRIX ERROR: Multiply matrix A[mxn] and B[cxd] where n = &quot;</span>&lt;&lt;this-&gt;columns&lt;&lt;<span class="stringliteral">&quot; and c = &quot;</span>&lt;&lt;mx.lines&lt;&lt;std::endl;</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">throw</span> INVALID_MATRIX_SIZE;</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;  }</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;  <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a> *tmp;</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;  tmp = <span class="keyword">new</span> <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>(this-&gt;lines,mx.columns);</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;  <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> i=0;i&lt;this-&gt;lines;i++){</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> j=0;j&lt;mx.columns;j++){</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;      <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> k=0;k&lt;this-&gt;columns;k++){</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        tmp-&gt;<a class="code" href="../../d6/d3f/class_matrix.htm#abaa9af9b23ee648fabba8834ca58c455">at</a>(i,j) += (this-&gt;at(i,k))*(mx.<a class="code" href="../../d6/d3f/class_matrix.htm#abaa9af9b23ee648fabba8834ca58c455">at</a>(k,j));</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;      }</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    }</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;  }</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;  <span class="keywordflow">return</span> *tmp;</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;}</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00457"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm#a6387535e08ecc653c6b20c78d703eb95">  457</a></span>&#160;<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; <a class="code" href="../../d6/d3f/class_matrix.htm#a11fd7dd911127f2548dfe9940fe592c2">Matrix&lt;T&gt;::operator*</a>(T&amp; val){</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;  <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a> *tmp;</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;  tmp = <span class="keyword">new</span> <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>();</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;  *tmp = *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;  <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> i=0;i&lt;tmp-&gt;lines;i++){</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> j=0;j&lt;tmp-&gt;columns;j++){</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;      tmp-&gt;<a class="code" href="../../d6/d3f/class_matrix.htm#abaa9af9b23ee648fabba8834ca58c455">at</a>(i,j) *= val;</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    }</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;  }</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;  <span class="keywordflow">return</span> *tmp;</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;}</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00470"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm#aca9c43aacf7efbdc17fda429d52b7e58">  470</a></span>&#160;<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; <a class="code" href="../../d6/d3f/class_matrix.htm#aca9c43aacf7efbdc17fda429d52b7e58">Matrix&lt;T&gt;::operator-</a>(<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; mx){</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;  <span class="keywordflow">if</span>((this-&gt;lines != mx.lines)||(this-&gt;columns!=mx.columns)){</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="preprocessor">    #ifdef DEBUG</span></div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;<span class="preprocessor"></span>      std::cout&lt;&lt;<span class="stringliteral">&quot;MATRIX ERROR: Subtraction only occur with matrix with same dimensions.&quot;</span>&lt;&lt;std::endl;</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">throw</span> INVALID_MATRIX_SIZE;</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;  }</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;  <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a> *tmp;</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;  tmp = <span class="keyword">new</span> <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>(mx.lines,mx.columns);</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;  <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> i=0;i&lt;mx.lines;i++){</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> j=0;j&lt;mx.columns;j++){</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;      tmp-&gt;<a class="code" href="../../d6/d3f/class_matrix.htm#abaa9af9b23ee648fabba8834ca58c455">at</a>(i,j) = this-&gt;at(i,j) - mx.<a class="code" href="../../d6/d3f/class_matrix.htm#abaa9af9b23ee648fabba8834ca58c455">at</a>(i,j);</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    }</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;  }</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;  <span class="keywordflow">return</span> *tmp;</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;}</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00488"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm#a4269762820f692017d96a3978336d8a2">  488</a></span>&#160;<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; <a class="code" href="../../d6/d3f/class_matrix.htm#a4269762820f692017d96a3978336d8a2">Matrix&lt;T&gt;::operator+</a>(<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; mx){</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;  <span class="keywordflow">if</span>((this-&gt;lines != mx.lines)||(this-&gt;columns!=mx.columns)){</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;<span class="preprocessor">    #ifdef DEBUG</span></div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;<span class="preprocessor"></span>      std::cout&lt;&lt;<span class="stringliteral">&quot;MATRIX ERROR: Subtraction only occur with matrix with same dimensions.&quot;</span>&lt;&lt;std::endl;</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="preprocessor"></span>    <span class="keywordflow">throw</span> INVALID_MATRIX_SIZE;</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;  }</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;  <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a> *tmp;</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;  tmp = <span class="keyword">new</span> <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>(mx.lines,mx.columns);</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;  <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> i=0;i&lt;mx.lines;i++){</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> j=0;j&lt;mx.columns;j++){</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;      tmp-&gt;<a class="code" href="../../d6/d3f/class_matrix.htm#abaa9af9b23ee648fabba8834ca58c455">at</a>(i,j) = this-&gt;at(i,j) + mx.<a class="code" href="../../d6/d3f/class_matrix.htm#abaa9af9b23ee648fabba8834ca58c455">at</a>(i,j);</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    }</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;  }</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;  <span class="keywordflow">return</span> *tmp;</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;}</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00506"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm#a7d960f17eb693c989a104fe338575b36">  506</a></span>&#160;<a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>&amp; <a class="code" href="../../d6/d3f/class_matrix.htm#a7d960f17eb693c989a104fe338575b36">Matrix&lt;T&gt;::operator/</a>(T&amp; val){</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;  <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a> *tmp;</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;  tmp = <span class="keyword">new</span> <a class="code" href="../../d6/d3f/class_matrix.htm">Matrix&lt;T&gt;</a>(this-&gt;lines,this-&gt;columns);</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;  <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> i=0;i&lt;this-&gt;lines;i++){</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> j=0;j&lt;this-&gt;columns;j++){</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;      tmp-&gt;<a class="code" href="../../d6/d3f/class_matrix.htm#abaa9af9b23ee648fabba8834ca58c455">at</a>(i,j) = this-&gt;at(i,j) /val;</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    }</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;  }</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;  <span class="keywordflow">return</span> *tmp;</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;}</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00518"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm#ad09c4c2b134c1357cf4c67d79775df5e">  518</a></span>&#160;T&amp; <a class="code" href="../../d6/d3f/class_matrix.htm#ad09c4c2b134c1357cf4c67d79775df5e">Matrix&lt;T&gt;::toValue</a>(){</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;  <span class="keywordflow">if</span>((this-&gt;lines != 1)||(this-&gt;columns != 1)){</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;<span class="preprocessor">    #ifdef DEBUG</span></div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="preprocessor"></span>      std::cout&lt;&lt;<span class="stringliteral">&quot;MATRIX ERROR: Unable to convert to value the matrix with more than 1 line or 1 column.&quot;</span>&lt;&lt;std::endl;</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;<span class="preprocessor"></span>    this-&gt;debug();</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    <span class="keywordflow">throw</span> INVALID_MATRIX_SIZE;</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;  }</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;  <span class="keywordflow">return</span> this-&gt;matrix.at(0,0);</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;}</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00530"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm#ac255da475227b8dc41411c4680276b1c">  530</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d3f/class_matrix.htm#ac255da475227b8dc41411c4680276b1c">Matrix&lt;T&gt;::fill</a>(T v){</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;  <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> j=0;j&lt;this-&gt;columns;j++){</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> i=0;i&lt;this-&gt;lines;i++){</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;      this-&gt;at(i,j) = v;</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    }</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;  }</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;}</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00538"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm#a34fc6c1821aa3e07d738053b1d734e1a">  538</a></span>&#160;<span class="keywordtype">unsigned</span> <a class="code" href="../../d6/d3f/class_matrix.htm#a34fc6c1821aa3e07d738053b1d734e1a">Matrix&lt;T&gt;::getColumns</a>(){</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;  <span class="keywordflow">return</span> columns;</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;}</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00543"></a><span class="lineno"><a class="line" href="../../d6/d3f/class_matrix.htm#adbb6521184032bd2bc467aeb4c092d88">  543</a></span>&#160;<span class="keywordtype">unsigned</span> <a class="code" href="../../d6/d3f/class_matrix.htm#adbb6521184032bd2bc467aeb4c092d88">Matrix&lt;T&gt;::getLines</a>(){</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;  <span class="keywordflow">return</span> lines;</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;}</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="ttc" id="class_matrix_htm_a7d960f17eb693c989a104fe338575b36"><div class="ttname"><a href="../../d6/d3f/class_matrix.htm#a7d960f17eb693c989a104fe338575b36">Matrix::operator/</a></div><div class="ttdeci">Matrix&lt; T &gt; &amp; operator/(T &amp;)</div><div class="ttdoc">Divide a matriz atual por um valor. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d49/_matrix_8hpp_source.htm#l00506">Matrix.hpp:506</a></div></div>
<div class="ttc" id="class_matrix_htm_a220144d29bb52bd0a40c64243273f8d0"><div class="ttname"><a href="../../d6/d3f/class_matrix.htm#a220144d29bb52bd0a40c64243273f8d0">Matrix::getColumn</a></div><div class="ttdeci">Matrix&lt; T &gt; &amp; getColumn(unsigned const j)</div><div class="ttdoc">Obtém um vetor coluna da matriz. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d49/_matrix_8hpp_source.htm#l00415">Matrix.hpp:415</a></div></div>
<div class="ttc" id="class_matrix_htm_ae19907e2ac28042ebf877cad40193a72"><div class="ttname"><a href="../../d6/d3f/class_matrix.htm#ae19907e2ac28042ebf877cad40193a72">Matrix::operator+=</a></div><div class="ttdeci">Matrix&lt; T &gt; &amp; operator+=(Matrix&lt; T &gt; &amp;other)</div><div class="ttdoc">Soma outra matriz à matriz atual. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d49/_matrix_8hpp_source.htm#l00376">Matrix.hpp:376</a></div></div>
<div class="ttc" id="class_matrix_htm_a9fd0ae7fdc4b6d9975023b30289913a4"><div class="ttname"><a href="../../d6/d3f/class_matrix.htm#a9fd0ae7fdc4b6d9975023b30289913a4">Matrix::appendMatrix</a></div><div class="ttdeci">bool appendMatrix(Matrix&lt; T &gt; &amp;other, unsigned const line, unsigned const column)</div><div class="ttdoc">Transfere(sem remoção) toda uma matriz para a matriz atual. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d49/_matrix_8hpp_source.htm#l00426">Matrix.hpp:426</a></div></div>
<div class="ttc" id="class_matrix_htm_ad09c4c2b134c1357cf4c67d79775df5e"><div class="ttname"><a href="../../d6/d3f/class_matrix.htm#ad09c4c2b134c1357cf4c67d79775df5e">Matrix::toValue</a></div><div class="ttdeci">T &amp; toValue()</div><div class="ttdoc">Obtém o único valor da matriz. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d49/_matrix_8hpp_source.htm#l00518">Matrix.hpp:518</a></div></div>
<div class="ttc" id="class_matrix_htm_afdb027e3ffa1391a7e9343a5c412007b"><div class="ttname"><a href="../../d6/d3f/class_matrix.htm#afdb027e3ffa1391a7e9343a5c412007b">Matrix::addColumns</a></div><div class="ttdeci">bool addColumns(unsigned const m)</div><div class="ttdoc">Adiciona colunas à matriz. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d49/_matrix_8hpp_source.htm#l00329">Matrix.hpp:329</a></div></div>
<div class="ttc" id="class_matrix_htm"><div class="ttname"><a href="../../d6/d3f/class_matrix.htm">Matrix</a></div><div class="ttdoc">Classe que implementa uma matriz usando o std::vector. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d49/_matrix_8hpp_source.htm#l00041">Matrix.hpp:41</a></div></div>
<div class="ttc" id="struct_matrix_position_htm"><div class="ttname"><a href="../../dd/d8b/struct_matrix_position.htm">MatrixPosition</a></div><div class="ttdoc">Estrutura que possui os dois índices de uma matriz. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d49/_matrix_8hpp_source.htm#l00028">Matrix.hpp:28</a></div></div>
<div class="ttc" id="class_matrix_htm_adbb6521184032bd2bc467aeb4c092d88"><div class="ttname"><a href="../../d6/d3f/class_matrix.htm#adbb6521184032bd2bc467aeb4c092d88">Matrix::getLines</a></div><div class="ttdeci">unsigned getLines()</div><div class="ttdoc">Obtém o número de linhas da matriz. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d49/_matrix_8hpp_source.htm#l00543">Matrix.hpp:543</a></div></div>
<div class="ttc" id="class_matrix_htm_a11fd7dd911127f2548dfe9940fe592c2"><div class="ttname"><a href="../../d6/d3f/class_matrix.htm#a11fd7dd911127f2548dfe9940fe592c2">Matrix::operator*</a></div><div class="ttdeci">Matrix&lt; T &gt; &amp; operator*(Matrix&lt; T &gt; &amp;other)</div><div class="ttdoc">Multiplica a matriz atual por outra matriz. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d49/_matrix_8hpp_source.htm#l00437">Matrix.hpp:437</a></div></div>
<div class="ttc" id="class_matrix_htm_a9d567e3a121b1be0c3f9c461cab524fe"><div class="ttname"><a href="../../d6/d3f/class_matrix.htm#a9d567e3a121b1be0c3f9c461cab524fe">Matrix::Matrix</a></div><div class="ttdeci">Matrix()</div><div class="ttdoc">Instancia a matriz com 0 linhas e 0 colunas. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d49/_matrix_8hpp_source.htm#l00227">Matrix.hpp:227</a></div></div>
<div class="ttc" id="class_matrix_htm_ae8ee96cb7bf5db514f6038e213403a4c"><div class="ttname"><a href="../../d6/d3f/class_matrix.htm#ae8ee96cb7bf5db514f6038e213403a4c">Matrix::resize</a></div><div class="ttdeci">void resize(unsigned lines, unsigned columns)</div><div class="ttdoc">Redimensiona a matriz. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d49/_matrix_8hpp_source.htm#l00261">Matrix.hpp:261</a></div></div>
<div class="ttc" id="class_matrix_htm_a34fc6c1821aa3e07d738053b1d734e1a"><div class="ttname"><a href="../../d6/d3f/class_matrix.htm#a34fc6c1821aa3e07d738053b1d734e1a">Matrix::getColumns</a></div><div class="ttdeci">unsigned getColumns()</div><div class="ttdoc">Obtém o número de colunas da matriz. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d49/_matrix_8hpp_source.htm#l00538">Matrix.hpp:538</a></div></div>
<div class="ttc" id="class_matrix_htm_ad2e5a68e8e420bae911d0ce6b735fe96"><div class="ttname"><a href="../../d6/d3f/class_matrix.htm#ad2e5a68e8e420bae911d0ce6b735fe96">Matrix::addLines</a></div><div class="ttdeci">bool addLines(unsigned const n)</div><div class="ttdoc">Adiciona linhas à matriz. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d49/_matrix_8hpp_source.htm#l00320">Matrix.hpp:320</a></div></div>
<div class="ttc" id="class_matrix_htm_aca9c43aacf7efbdc17fda429d52b7e58"><div class="ttname"><a href="../../d6/d3f/class_matrix.htm#aca9c43aacf7efbdc17fda429d52b7e58">Matrix::operator-</a></div><div class="ttdeci">Matrix&lt; T &gt; &amp; operator-(Matrix&lt; T &gt; &amp;other)</div><div class="ttdoc">Subtrai duas matrizes duas matrizes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d49/_matrix_8hpp_source.htm#l00470">Matrix.hpp:470</a></div></div>
<div class="ttc" id="class_matrix_htm_aa66022e7f937519b9155bca2eda2e531"><div class="ttname"><a href="../../d6/d3f/class_matrix.htm#aa66022e7f937519b9155bca2eda2e531">Matrix::operator=</a></div><div class="ttdeci">Matrix&lt; T &gt; &amp; operator=(Matrix&lt; T &gt; &amp;other)</div><div class="ttdoc">Clona uma matriz. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d49/_matrix_8hpp_source.htm#l00357">Matrix.hpp:357</a></div></div>
<div class="ttc" id="class_matrix_htm_aba626c56e96ed01060bb634dfc193420"><div class="ttname"><a href="../../d6/d3f/class_matrix.htm#aba626c56e96ed01060bb634dfc193420">Matrix::subMatrix</a></div><div class="ttdeci">Matrix&lt; T &gt; &amp; subMatrix(unsigned const start_i, unsigned const start_j, unsigned const final_i, unsigned const final_j)</div><div class="ttdoc">Obtém uma subdivisão da matriz. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d49/_matrix_8hpp_source.htm#l00386">Matrix.hpp:386</a></div></div>
<div class="ttc" id="class_matrix_htm_ae47fea43f6fcb62fe04a63f5d5a719f9"><div class="ttname"><a href="../../d6/d3f/class_matrix.htm#ae47fea43f6fcb62fe04a63f5d5a719f9">Matrix::appendColumnInLine</a></div><div class="ttdeci">bool appendColumnInLine(Matrix&lt; T &gt; &amp;other, unsigned const column, unsigned const line, unsigned const start)</div><div class="ttdoc">Transfere(sem remoção) uma coluna (por completo) de uma matriz à linha da matriz atual. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d49/_matrix_8hpp_source.htm#l00366">Matrix.hpp:366</a></div></div>
<div class="ttc" id="class_matrix_htm_a64399359a44e443925eb39953766b499"><div class="ttname"><a href="../../d6/d3f/class_matrix.htm#a64399359a44e443925eb39953766b499">Matrix::remLine</a></div><div class="ttdeci">bool remLine(unsigned const i)</div><div class="ttdoc">Remove uma linha da matriz. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d49/_matrix_8hpp_source.htm#l00345">Matrix.hpp:345</a></div></div>
<div class="ttc" id="class_matrix_htm_abaa9af9b23ee648fabba8834ca58c455"><div class="ttname"><a href="../../d6/d3f/class_matrix.htm#abaa9af9b23ee648fabba8834ca58c455">Matrix::at</a></div><div class="ttdeci">std::vector&lt; T &gt;::reference at(unsigned const i, unsigned const j)</div><div class="ttdoc">Obtém o elemento dados os índices. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d49/_matrix_8hpp_source.htm#l00274">Matrix.hpp:274</a></div></div>
<div class="ttc" id="class_matrix_htm_ac255da475227b8dc41411c4680276b1c"><div class="ttname"><a href="../../d6/d3f/class_matrix.htm#ac255da475227b8dc41411c4680276b1c">Matrix::fill</a></div><div class="ttdeci">void fill(T value)</div><div class="ttdoc">Preenche toda a matriz com um valor. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d49/_matrix_8hpp_source.htm#l00530">Matrix.hpp:530</a></div></div>
<div class="ttc" id="class_matrix_htm_a4269762820f692017d96a3978336d8a2"><div class="ttname"><a href="../../d6/d3f/class_matrix.htm#a4269762820f692017d96a3978336d8a2">Matrix::operator+</a></div><div class="ttdeci">Matrix&lt; T &gt; &amp; operator+(Matrix&lt; T &gt; &amp;other)</div><div class="ttdoc">Subtrai duas matrizes. </div><div class="ttdef"><b>Definition:</b> <a href="../../d8/d49/_matrix_8hpp_source.htm#l00488">Matrix.hpp:488</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Gerado em Sexta, 16 de Maio de 2014 15:14:09 para CrazyCrush por &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>
