<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>CrazyCrush: CÃ³digo-Fonte de src/AnimatorQueue.cpp</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">CrazyCrush
   &#160;<span id="projectnumber">1.0.7</span>
   </div>
   <div id="projectbrief">Um simples jogo</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Gerado por Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Busca');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.htm"><span>PÃ¡gina&#160;Principal</span></a></li>
      <li><a href="../../namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.htm"><span>Arquivos</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Busca" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.htm"><span>Lista&#160;de&#160;Arquivos</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>Todos</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>FunÃ§Ãµes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>VariÃ¡veis</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_68267d1309a1af8e8297ef4c3efbcdba.htm">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">AnimatorQueue.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/* Universidade Federal do Rio de Janeiro</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Escola Politécnica</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * Departamento de Eletrônica e Computação</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * Prof. Fernando Silva</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * EEL 670 - Linguagem de Programação</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * Authors: Daniel Dahis     (dahisdaniel@poli.ufrj.br)</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *          Leonan França    (leonancfr@poli.ufrj.br)</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *          Gustavo Silva    (diguser@gmail.com)</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *          Michael Douglas  (michaeldouglas@poli.ufrj.br)</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &quot;AnimatorQueue.hpp&quot;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &quot;MorphLinear.hpp&quot;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &quot;CallbackDestroy.hpp&quot;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;AnimatorQueue::AnimatorQueue(){</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  <span class="keywordtype">object</span> = NULL;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  animationStart = 0;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  actualStep = 0;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  objColor = NULL;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  isComplete = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  skipCallback = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  isInCallback = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  vectors_mutex = PTHREAD_RECURSIVE_MUTEX_INITIALIZER;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;}</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="../../d1/d91/class_animator_queue.htm#ac4c1f9d3b214cc127aba33146b6812f2">   27</a></span>&#160;<a class="code" href="../../d1/d91/class_animator_queue.htm">AnimatorQueue</a>&amp; <a class="code" href="../../d1/d91/class_animator_queue.htm#ac4c1f9d3b214cc127aba33146b6812f2">AnimatorQueue::operator=</a>(<a class="code" href="../../d1/d91/class_animator_queue.htm">AnimatorQueue</a>&amp; other){</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> i=0; i &lt; other.animations.size(); i++){</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    animations.push_back(other.animations[i]);</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  }</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;}</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="../../d1/d91/class_animator_queue.htm#a7cfe3a91fab5ea1b863b20c058f28017">   34</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d1/d91/class_animator_queue.htm#a7cfe3a91fab5ea1b863b20c058f28017">AnimatorQueue::setObject</a>(<a class="code" href="../../de/d2f/class_animator_object.htm">AnimatorObject</a>* nObj){</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keywordflow">if</span>(<span class="keywordtype">object</span> == NULL){</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keywordtype">object</span> = nObj;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> i=animations.size(); i &lt; animations.size(); i++){</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      animations[i]-&gt;setObject(nObj);</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    }</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  }</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <span class="keywordflow">if</span>(<span class="keywordtype">object</span> == nObj){</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> i=animations.size(); i &lt; animations.size(); i++){</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;      animations[i]-&gt;setObject(nObj);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    }</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  }</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keywordtype">void</span> AnimatorQueue::processStep(irr::u32 time){</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keywordflow">if</span>((animationStart == 0)||(isComplete))</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="keywordflow">if</span>(actualStep == time)</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  actualStep = time;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  pthread_mutex_lock(&amp;vectors_mutex);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keywordflow">for</span>(std::vector&lt;ObjectMorph*&gt;::iterator it=animations.begin();it!=animations.end();it++){</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">if</span>(*it == NULL)</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">if</span>(!(*it)-&gt;isRunning())</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;      (*it)-&gt;start(time);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    screenRect = (*it)-&gt;getScreenRect(time);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    objColor = (*it)-&gt;getImageAlpha(time);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">if</span>((*it)-&gt;isComplete()){</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;      <span class="keywordtype">object</span>-&gt;aSetImageColor(objColor);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;      <span class="keywordtype">object</span>-&gt;aSetScreenPosition(screenRect.UpperLeftCorner.X,screenRect.UpperLeftCorner.Y);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      <span class="keywordtype">object</span>-&gt;aSetScreenSize(screenRect.getWidth(),screenRect.getHeight());</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      <span class="keyword">delete</span> (*it);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      animations.erase(it);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    }</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    pthread_mutex_unlock(&amp;vectors_mutex);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  }</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  isComplete = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  isInCallback = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> i=0;i&lt;callbacks.size();i++){</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">if</span>(skipCallback)</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordflow">if</span>(callbacks[i] == NULL)</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;      <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    callbacks[i]-&gt;process();</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">if</span>(skipCallback)</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    deleteCallback(callbacks[i]);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    callbacks.erase(callbacks.begin()+i);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    i--;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  }</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  isInCallback = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  skipCallback = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  pthread_mutex_unlock(&amp;vectors_mutex);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;}</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="../../d1/d91/class_animator_queue.htm#a31c19836b3de2fc5f4a2f52e6e7b70d7">   94</a></span>&#160;irr::core::rect&lt;irr::s32&gt; <a class="code" href="../../d1/d91/class_animator_queue.htm#a31c19836b3de2fc5f4a2f52e6e7b70d7">AnimatorQueue::getScreenRect</a>(irr::u32 time){</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keywordflow">if</span>(animationStart == 0){</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordflow">return</span> irr::core::rect&lt;irr::s32&gt;(</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      <span class="keywordtype">object</span>-&gt;getScreenPositionX(),</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      <span class="keywordtype">object</span>-&gt;getScreenPositionY(),</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      <span class="keywordtype">object</span>-&gt;getScreenPositionX()+<span class="keywordtype">object</span>-&gt;getScreenWidth(),</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      <span class="keywordtype">object</span>-&gt;getScreenPositionY()+<span class="keywordtype">object</span>-&gt;getScreenHeight()</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    );</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  processStep(time);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="keywordflow">return</span> screenRect;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="../../d1/d91/class_animator_queue.htm#a20753484c62f80f0a3cf4bd4fbb5e7a1">  107</a></span>&#160;irr::video::SColor* <a class="code" href="../../d1/d91/class_animator_queue.htm#a20753484c62f80f0a3cf4bd4fbb5e7a1">AnimatorQueue::getImageAlpha</a>(irr::u32 time){</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="keywordflow">if</span>(animationStart == 0)</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">return</span> <span class="keywordtype">object</span>-&gt;getColor();</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  processStep(time);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="keywordflow">return</span> objColor;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;}</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="../../d1/d91/class_animator_queue.htm#aa9aa00e3deb21b8f7b3fa56db98ddd85">  114</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d1/d91/class_animator_queue.htm#aa9aa00e3deb21b8f7b3fa56db98ddd85">AnimatorQueue::isRunning</a>(){</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keywordflow">if</span>(isComplete)</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  <span class="keywordflow">if</span>(animationStart == 0)</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;}</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div>
<div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="../../d1/d91/class_animator_queue.htm#a7aa3cebd6ece7bc803f65ea12b5fd9f5">  122</a></span>&#160;<a class="code" href="../../d1/d91/class_animator_queue.htm">AnimatorQueue</a>&amp; <a class="code" href="../../d1/d91/class_animator_queue.htm#a7aa3cebd6ece7bc803f65ea12b5fd9f5">AnimatorQueue::stopAnimation</a>(){</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  isComplete = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  pthread_mutex_lock(&amp;vectors_mutex);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  animationStart = 0;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  isComplete = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="keywordflow">if</span>(isInCallback){</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    skipCallback = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  }</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> i=0;i&lt;animations.size();i++){</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordflow">if</span>(animations[i] != NULL){</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;      <span class="keyword">delete</span> animations[i];</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;      animations[i] = NULL;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    }</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  }</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> i=0;i&lt;callbacks.size();i++){</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keywordflow">if</span>(callbacks[i] != NULL){</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      deleteCallback(callbacks[i]);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      callbacks[i] = NULL;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  animations.resize(0);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  callbacks.resize(0);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  pthread_mutex_unlock(&amp;vectors_mutex);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;}</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div>
<div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="../../d1/d91/class_animator_queue.htm#a1c4583b178f798ec3535b90b35302e33">  148</a></span>&#160;<a class="code" href="../../d1/d91/class_animator_queue.htm">AnimatorQueue</a>&amp; <a class="code" href="../../d1/d91/class_animator_queue.htm#a1c4583b178f798ec3535b90b35302e33">AnimatorQueue::startAnimation</a>(irr::u32 time){</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  animationStart = time;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  isComplete = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;}</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div>
<div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="../../d1/d91/class_animator_queue.htm#ae6f8830d3b53ae853e1ec75ef135292f">  154</a></span>&#160;<a class="code" href="../../d1/d91/class_animator_queue.htm">AnimatorQueue</a>&amp; <a class="code" href="../../d1/d91/class_animator_queue.htm#ae6f8830d3b53ae853e1ec75ef135292f">AnimatorQueue::appendMorph</a>(<a class="code" href="../../d7/d1a/class_object_morph.htm">ObjectMorph</a>* objMorph){</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  animations.push_back(objMorph);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;}</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="../../d1/d91/class_animator_queue.htm#a89e2d21a6e06b5f2347c3d585ab4ed98">  159</a></span>&#160;<a class="code" href="../../d1/d91/class_animator_queue.htm">AnimatorQueue</a>&amp; <a class="code" href="../../d1/d91/class_animator_queue.htm#a89e2d21a6e06b5f2347c3d585ab4ed98">AnimatorQueue::appendCallback</a>(<a class="code" href="../../d1/dd4/class_callback.htm">Callback</a>* c){</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  callbacks.push_back(c);</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;}</div>
<div class="ttc" id="class_animator_queue_htm_a7aa3cebd6ece7bc803f65ea12b5fd9f5"><div class="ttname"><a href="../../d1/d91/class_animator_queue.htm#a7aa3cebd6ece7bc803f65ea12b5fd9f5">AnimatorQueue::stopAnimation</a></div><div class="ttdeci">AnimatorQueue &amp; stopAnimation()</div><div class="ttdoc">PÃ¡ra a classe e remove todos os ObjectMorph e Callback. </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d5f/_animator_queue_8cpp_source.htm#l00122">AnimatorQueue.cpp:122</a></div></div>
<div class="ttc" id="class_animator_object_htm"><div class="ttname"><a href="../../de/d2f/class_animator_object.htm">AnimatorObject</a></div><div class="ttdoc">Classe abstrata que Ã© base para os elementos da tela. </div><div class="ttdef"><b>Definition:</b> <a href="../../d6/d8c/_animator_object_8hpp_source.htm#l00026">AnimatorObject.hpp:26</a></div></div>
<div class="ttc" id="class_animator_queue_htm_ac4c1f9d3b214cc127aba33146b6812f2"><div class="ttname"><a href="../../d1/d91/class_animator_queue.htm#ac4c1f9d3b214cc127aba33146b6812f2">AnimatorQueue::operator=</a></div><div class="ttdeci">AnimatorQueue &amp; operator=(AnimatorQueue &amp;queue)</div><div class="ttdoc">Copia os atributos de um outro AnimatorObject para o atual. </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d5f/_animator_queue_8cpp_source.htm#l00027">AnimatorQueue.cpp:27</a></div></div>
<div class="ttc" id="class_animator_queue_htm_a1c4583b178f798ec3535b90b35302e33"><div class="ttname"><a href="../../d1/d91/class_animator_queue.htm#a1c4583b178f798ec3535b90b35302e33">AnimatorQueue::startAnimation</a></div><div class="ttdeci">AnimatorQueue &amp; startAnimation(irr::u32 time)</div><div class="ttdoc">Inicia a animaÃ§Ã£o no tempo. </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d5f/_animator_queue_8cpp_source.htm#l00148">AnimatorQueue.cpp:148</a></div></div>
<div class="ttc" id="class_object_morph_htm"><div class="ttname"><a href="../../d7/d1a/class_object_morph.htm">ObjectMorph</a></div><div class="ttdoc">Classe abstrata usada como base para outros tipos de Morph. </div><div class="ttdef"><b>Definition:</b> <a href="../../de/d82/_object_morph_8hpp_source.htm#l00022">ObjectMorph.hpp:22</a></div></div>
<div class="ttc" id="class_animator_queue_htm_a31c19836b3de2fc5f4a2f52e6e7b70d7"><div class="ttname"><a href="../../d1/d91/class_animator_queue.htm#a31c19836b3de2fc5f4a2f52e6e7b70d7">AnimatorQueue::getScreenRect</a></div><div class="ttdeci">irr::core::rect&lt; irr::s32 &gt; getScreenRect(irr::u32)</div><div class="ttdoc">Processa a posiÃ§Ã£o e tamanho do objeto na tela. </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d5f/_animator_queue_8cpp_source.htm#l00094">AnimatorQueue.cpp:94</a></div></div>
<div class="ttc" id="class_animator_queue_htm"><div class="ttname"><a href="../../d1/d91/class_animator_queue.htm">AnimatorQueue</a></div><div class="ttdoc">Classe que implementa uma fila de animaÃ§Ãµes(no tempo) e callbacks para algum AnimatorObject. </div><div class="ttdef"><b>Definition:</b> <a href="../../d3/dfa/_animator_queue_8hpp_source.htm#l00029">AnimatorQueue.hpp:29</a></div></div>
<div class="ttc" id="class_animator_queue_htm_aa9aa00e3deb21b8f7b3fa56db98ddd85"><div class="ttname"><a href="../../d1/d91/class_animator_queue.htm#aa9aa00e3deb21b8f7b3fa56db98ddd85">AnimatorQueue::isRunning</a></div><div class="ttdeci">bool isRunning()</div><div class="ttdoc">Para saber se a classe estÃ¡ processando no tempo. </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d5f/_animator_queue_8cpp_source.htm#l00114">AnimatorQueue.cpp:114</a></div></div>
<div class="ttc" id="class_callback_htm"><div class="ttname"><a href="../../d1/dd4/class_callback.htm">Callback</a></div><div class="ttdoc">Classe abstrata para evitar o uso de ponteiros de funÃ§Ã£o. </div><div class="ttdef"><b>Definition:</b> <a href="../../d9/d4c/_callback_8hpp_source.htm#l00018">Callback.hpp:18</a></div></div>
<div class="ttc" id="class_animator_queue_htm_a89e2d21a6e06b5f2347c3d585ab4ed98"><div class="ttname"><a href="../../d1/d91/class_animator_queue.htm#a89e2d21a6e06b5f2347c3d585ab4ed98">AnimatorQueue::appendCallback</a></div><div class="ttdeci">AnimatorQueue &amp; appendCallback(Callback *callback)</div><div class="ttdoc">Adiciona um Callback Ã  lista. </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d5f/_animator_queue_8cpp_source.htm#l00159">AnimatorQueue.cpp:159</a></div></div>
<div class="ttc" id="class_animator_queue_htm_ae6f8830d3b53ae853e1ec75ef135292f"><div class="ttname"><a href="../../d1/d91/class_animator_queue.htm#ae6f8830d3b53ae853e1ec75ef135292f">AnimatorQueue::appendMorph</a></div><div class="ttdeci">AnimatorQueue &amp; appendMorph(ObjectMorph *morph)</div><div class="ttdoc">Adiciona um ObjectMorph Ã  lista. </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d5f/_animator_queue_8cpp_source.htm#l00154">AnimatorQueue.cpp:154</a></div></div>
<div class="ttc" id="class_animator_queue_htm_a20753484c62f80f0a3cf4bd4fbb5e7a1"><div class="ttname"><a href="../../d1/d91/class_animator_queue.htm#a20753484c62f80f0a3cf4bd4fbb5e7a1">AnimatorQueue::getImageAlpha</a></div><div class="ttdeci">irr::video::SColor * getImageAlpha(irr::u32)</div><div class="ttdoc">Processa a cor (mÃ¡scara) do objeto na tela. </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d5f/_animator_queue_8cpp_source.htm#l00107">AnimatorQueue.cpp:107</a></div></div>
<div class="ttc" id="class_animator_queue_htm_a7cfe3a91fab5ea1b863b20c058f28017"><div class="ttname"><a href="../../d1/d91/class_animator_queue.htm#a7cfe3a91fab5ea1b863b20c058f28017">AnimatorQueue::setObject</a></div><div class="ttdeci">bool setObject(AnimatorObject *object)</div><div class="ttdoc">Atribui o AnimatorQueue a um AnimatorObject. </div><div class="ttdef"><b>Definition:</b> <a href="../../db/d5f/_animator_queue_8cpp_source.htm#l00034">AnimatorQueue.cpp:34</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Gerado em Sexta, 16 de Maio de 2014 15:14:03 para CrazyCrush por &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>
