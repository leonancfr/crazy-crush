<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>CrazyCrush: Código-Fonte de src/ZOrder.hpp</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">CrazyCrush
   &#160;<span id="projectnumber">1.0.7</span>
   </div>
   <div id="projectbrief">Um simples jogo</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Gerado por Doxygen 1.8.5 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "../../search",false,'Busca');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="../../index.htm"><span>Página&#160;Principal</span></a></li>
      <li><a href="../../namespaces.htm"><span>Namespaces</span></a></li>
      <li><a href="../../annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="../../files.htm"><span>Arquivos</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="../../search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Busca" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="../../search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="../../files.htm"><span>Lista&#160;de&#160;Arquivos</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>Todos</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Funções</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Variáveis</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="../../dir_68267d1309a1af8e8297ef4c3efbcdba.htm">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ZOrder.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/* Universidade Federal do Rio de Janeiro</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Escola Politécnica</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * Departamento de Eletrônica e Computação</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * Prof. Fernando Silva</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * EEL 670 - Linguagem de Programação</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * Authors: Daniel Dahis     (dahisdaniel@poli.ufrj.br)</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *          Leonan França    (leonancfr@poli.ufrj.br)</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *          Gustavo Silva    (diguser@gmail.com)</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *          Michael Douglas  (michaeldouglas@poli.ufrj.br)</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#ifndef _MEGA_ZORDER_HPP_</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define _MEGA_ZORDER_HPP_ 1</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;pthread.h&gt;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &quot;AnimatorObject.hpp&quot;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="../../d0/d85/class_z_order.htm">   24</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d0/d85/class_z_order.htm">ZOrder</a> {</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <span class="keyword">private</span>:</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keyword">typedef</span> <span class="keyword">struct</span>{</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;      <span class="keywordtype">int</span> ZIndex;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;      <span class="keywordtype">int</span> size;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;      std::vector&lt;T&gt; content;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    } ZVal;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    std::vector&lt;ZVal&gt; content;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keywordtype">unsigned</span> aPosPrincipal, aPosInner;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keywordtype">unsigned</span> insertIndex(<span class="keywordtype">int</span>);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    pthread_mutex_t access;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keyword">public</span>:</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <a class="code" href="../../d0/d85/class_z_order.htm">ZOrder</a>();</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    ~<a class="code" href="../../d0/d85/class_z_order.htm">ZOrder</a>();</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../d0/d85/class_z_order.htm#a19b2c9c306587267eef55d52cd5af971">addObject</a>(T <span class="keywordtype">object</span>,<span class="keywordtype">int</span> index);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../d0/d85/class_z_order.htm#a14e000692c387476040a3f63e30c568f">remObject</a>(T <span class="keywordtype">object</span>,<span class="keywordtype">int</span> index);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../d0/d85/class_z_order.htm#a14e000692c387476040a3f63e30c568f">remObject</a>(T <span class="keywordtype">object</span>);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="../../d0/d85/class_z_order.htm#a43a824416faef74f048f535c950a3716">begin</a>();</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../d0/d85/class_z_order.htm#ace2abe2010319522acd1154d82edba57">hasNext</a>();</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    T <a class="code" href="../../d0/d85/class_z_order.htm#a66943947c08b3ba572bb3f22fdc92e4b">next</a>();</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="../../d0/d85/class_z_order.htm#a420e138b16bdd44f12577beed0b48db3">getTopIndex</a>();</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index_background = 0;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index_stage = index_background+1;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index_stagePoints = index_stage+1;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index_gems = index_stagePoints+1;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index_selectPointer = index_gems+1;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index_select = index_selectPointer+1;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index_score_bg = index_stage+1;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index_score_bar = index_score_bg+1;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> index_score_bar_divider = index_score_bar+1;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="preprocessor">    #ifdef DEBUG</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="preprocessor"></span>    <span class="keywordtype">void</span> debug();</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="preprocessor"></span>};</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keywordtype">unsigned</span> <a class="code" href="../../d0/d85/class_z_order.htm">ZOrder&lt;T&gt;::insertIndex</a>(<span class="keywordtype">int</span> zIndex){</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  ZVal cont;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  cont.ZIndex = zIndex;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  cont.size=0;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keywordtype">int</span> i = 0;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  content.push_back(cont);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keywordflow">for</span>(i=(content.size()-1);i&gt;=0;i--){</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordflow">if</span>((i!=0)&amp;&amp;(content[i-1].ZIndex &gt; zIndex)){</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      content[i] = content[i-1];</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      content[i] = cont;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keywordflow">return</span> i;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<a class="code" href="../../d0/d85/class_z_order.htm">ZOrder&lt;T&gt;::ZOrder</a>(){</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  aPosPrincipal = 0;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  aPosInner = 0;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  access = PTHREAD_MUTEX_INITIALIZER;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;}</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<a class="code" href="../../d0/d85/class_z_order.htm">ZOrder&lt;T&gt;::~ZOrder</a>(){}</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="../../d0/d85/class_z_order.htm#a19b2c9c306587267eef55d52cd5af971">  117</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d0/d85/class_z_order.htm#a19b2c9c306587267eef55d52cd5af971">ZOrder&lt;T&gt;::addObject</a>(T obj,<span class="keywordtype">int</span> zIndex){</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <span class="keywordtype">unsigned</span> mainIndex = (unsigned)(-1);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  pthread_mutex_lock(&amp;access);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> i=0;i&lt;content.size();i++){</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordflow">if</span>(content[i].ZIndex == zIndex){</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      mainIndex = i;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    }</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  }</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="keywordflow">if</span>(mainIndex != (<span class="keywordtype">unsigned</span>)(-1)){</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    content[mainIndex].content.push_back(obj);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    content[mainIndex].size++;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    pthread_mutex_unlock(&amp;access);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  }</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  mainIndex = insertIndex(zIndex);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="keywordflow">if</span>(mainIndex == (<span class="keywordtype">unsigned</span>)(-1)){</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    pthread_mutex_unlock(&amp;access);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  }</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  content[mainIndex].content.push_back(obj);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  content[mainIndex].size++;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  pthread_mutex_unlock(&amp;access);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;}</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="../../d0/d85/class_z_order.htm#a14e000692c387476040a3f63e30c568f">  144</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d0/d85/class_z_order.htm#a14e000692c387476040a3f63e30c568f">ZOrder&lt;T&gt;::remObject</a>(T obj,<span class="keywordtype">int</span> zIndex){</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <span class="keywordtype">bool</span> finded = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  pthread_mutex_lock(&amp;access);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> i=0;i&lt;content.size();i++){</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keywordflow">if</span>(content[i].ZIndex == zIndex){</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;      <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> j=0;j&lt;content[i].content.size();j++){</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keywordflow">if</span>(content[i].content[j] == obj){</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;          finded = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;          content[i].content[j] = NULL;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;          content[i].size--;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;          content[i].content.erase(content[i].content.begin()+j);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;          <span class="keywordflow">if</span>(content[i].content.size() == 0){</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            content.erase(content.begin()+i);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            i--;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            pthread_mutex_unlock(&amp;access);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keywordflow">return</span> finded;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;          }</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;          j--;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        }</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;      }</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    }</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  }</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  pthread_mutex_unlock(&amp;access);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <span class="keywordflow">return</span> finded;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;}</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00172"></a><span class="lineno"><a class="line" href="../../d0/d85/class_z_order.htm#a94db6123f7b93d151f195f701c0b3901">  172</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d0/d85/class_z_order.htm#a14e000692c387476040a3f63e30c568f">ZOrder&lt;T&gt;::remObject</a>(T obj){</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keywordtype">bool</span> finded = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  pthread_mutex_lock(&amp;access);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> i=0;i&lt;content.size();i++){</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> j=0;j&lt;content[i].content.size();j++){</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      <span class="keywordflow">if</span>(content[i].content[j] == obj){</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        content[i].content[j] = NULL;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        content[i].size--;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        finded = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        content[i].content.erase(content[i].content.begin()+j);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        j--;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;      }</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    }</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  }</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  pthread_mutex_unlock(&amp;access);</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <span class="keywordflow">return</span> finded;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;}</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="../../d0/d85/class_z_order.htm#ace2abe2010319522acd1154d82edba57">  191</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d0/d85/class_z_order.htm#ace2abe2010319522acd1154d82edba57">ZOrder&lt;T&gt;::hasNext</a>(){</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  pthread_mutex_lock(&amp;access);</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  <span class="keywordflow">if</span>(aPosPrincipal &gt;= content.size()){</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    pthread_mutex_unlock(&amp;access);</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  }</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  pthread_mutex_unlock(&amp;access);</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;}</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00202"></a><span class="lineno"><a class="line" href="../../d0/d85/class_z_order.htm#a43a824416faef74f048f535c950a3716">  202</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d0/d85/class_z_order.htm#a43a824416faef74f048f535c950a3716">ZOrder&lt;T&gt;::begin</a>(){</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  aPosPrincipal = 0;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  aPosInner = 0;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  pthread_mutex_lock(&amp;access);</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  <span class="keywordtype">bool</span> finded = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  <span class="keywordflow">for</span>(aPosPrincipal=0;aPosPrincipal&lt;content.size();aPosPrincipal++){</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keywordflow">if</span>(content[aPosPrincipal].size == 0)</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;      <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keywordflow">for</span>(aPosInner=0;aPosInner&lt;content[aPosPrincipal].content.size();aPosInner++){</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;      <span class="keywordflow">if</span>(content[aPosPrincipal].content[aPosInner] != NULL){</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        finded = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;      }</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    }</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordflow">if</span>(finded) <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  }</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  pthread_mutex_unlock(&amp;access);</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;}</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00221"></a><span class="lineno"><a class="line" href="../../d0/d85/class_z_order.htm#a66943947c08b3ba572bb3f22fdc92e4b">  221</a></span>&#160;T <a class="code" href="../../d0/d85/class_z_order.htm#a66943947c08b3ba572bb3f22fdc92e4b">ZOrder&lt;T&gt;::next</a>(){</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  <span class="keywordflow">if</span>(!hasNext())</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;  <span class="keywordtype">unsigned</span> i = aPosPrincipal;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;  <span class="keywordtype">unsigned</span> j = aPosInner;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;  aPosInner++;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;  pthread_mutex_lock(&amp;access);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  <span class="keywordflow">if</span>(content[i].content.size() &lt;= aPosInner){</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    aPosInner = 0;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    aPosPrincipal++;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <span class="keywordtype">bool</span> finded = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keywordflow">for</span>(;aPosPrincipal&lt;content.size();aPosPrincipal++){</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;      <span class="keywordflow">if</span>(content[aPosPrincipal].size == 0)</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;      <span class="keywordflow">for</span>(aPosInner=0;aPosInner&lt;content[aPosPrincipal].content.size();aPosInner++){</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <span class="keywordflow">if</span>(content[aPosPrincipal].content[aPosInner]!=NULL){</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;          finded = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;          <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        }</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;      }</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;      <span class="keywordflow">if</span>(finded) <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    }</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  }</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  T t = content[i].content[j];</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;  pthread_mutex_unlock(&amp;access);</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  <span class="keywordflow">return</span> t;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;}</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00250"></a><span class="lineno"><a class="line" href="../../d0/d85/class_z_order.htm#a420e138b16bdd44f12577beed0b48db3">  250</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="../../d0/d85/class_z_order.htm#a420e138b16bdd44f12577beed0b48db3">ZOrder&lt;T&gt;::getTopIndex</a>(){</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;  <span class="keywordtype">int</span> v = -1000;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;  pthread_mutex_lock(&amp;access);</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;  <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> i=0;i&lt;content.size();i++){</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="keywordflow">if</span>(content[i].size == 0)</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;      <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keywordflow">if</span>(content[i].content.size() != 0){</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;      <span class="keywordflow">for</span>(<span class="keywordtype">unsigned</span> j=0;j&lt;content[i].content.size();j++){</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        <span class="keywordflow">if</span>(content[i].content[j] == NULL)</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;          <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="keywordflow">if</span>(content[i].ZIndex &gt; v)</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;          v = content[i].ZIndex;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;      }</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    }</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;  }</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;  pthread_mutex_unlock(&amp;access);</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;  <span class="keywordflow">return</span> v;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;}</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="preprocessor">#ifdef DEBUG</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="preprocessor"></span><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d0/d85/class_z_order.htm">ZOrder&lt;T&gt;::debug</a>(){</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  <span class="comment">/*</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">  unsigned obj_num = 0;</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment">  pthread_mutex_lock(&amp;access);</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">  std::cout &lt;&lt; &quot;ZOrder:: debug&quot; &lt;&lt;std::endl;</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">  for(unsigned i=0;i&lt;content.size();i++){</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="comment">    if(content[i].content.size() != 0){</span></div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="comment">      obj_num+=content[i].content.size();</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">      std::cout &lt;&lt; content[i].ZIndex &lt;&lt; &quot;: &quot;;</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment">      for(unsigned j=0;j&lt;content[i].content.size();j++){</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">        std::cout &lt;&lt; content[i].content[j] &lt;&lt; &quot; &quot;;</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">      }</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">      std::cout &lt;&lt; std::endl;</span></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment">    }</span></div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="comment">  }</span></div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="comment">  std::cout &lt;&lt; &quot;ZOrder:: total objects = &quot; &lt;&lt; obj_num &lt;&lt;std::endl;</span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="comment">  pthread_mutex_unlock(&amp;access);</span></div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">  */</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;}</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="keyword">namespace </span>CrazyCrush {</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;  <span class="keyword">extern</span> <a class="code" href="../../d0/d85/class_z_order.htm">ZOrder&lt;AnimatorObject*&gt;</a> <a class="code" href="../../dd/dae/namespace_crazy_crush.htm#a26fd9e4f552f58611f909d87802c2f19">z_order</a>;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;}</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="ttc" id="class_z_order_htm_a14e000692c387476040a3f63e30c568f"><div class="ttname"><a href="../../d0/d85/class_z_order.htm#a14e000692c387476040a3f63e30c568f">ZOrder::remObject</a></div><div class="ttdeci">bool remObject(T object, int index)</div><div class="ttdoc">Remove o objeto do índice informado. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d0e/_z_order_8hpp_source.htm#l00144">ZOrder.hpp:144</a></div></div>
<div class="ttc" id="class_z_order_htm_a66943947c08b3ba572bb3f22fdc92e4b"><div class="ttname"><a href="../../d0/d85/class_z_order.htm#a66943947c08b3ba572bb3f22fdc92e4b">ZOrder::next</a></div><div class="ttdeci">T next()</div><div class="ttdoc">Retorna o próximo elemento da lista (e move o ponteiro para o próximo elemento) </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d0e/_z_order_8hpp_source.htm#l00221">ZOrder.hpp:221</a></div></div>
<div class="ttc" id="namespace_crazy_crush_htm_a26fd9e4f552f58611f909d87802c2f19"><div class="ttname"><a href="../../dd/dae/namespace_crazy_crush.htm#a26fd9e4f552f58611f909d87802c2f19">CrazyCrush::z_order</a></div><div class="ttdeci">ZOrder&lt; AnimatorObject * &gt; z_order</div><div class="ttdoc">Instancia global do ZOrder. </div><div class="ttdef"><b>Definition:</b> <a href="../../d5/d5b/_z_order_8cpp_source.htm#l00015">ZOrder.cpp:15</a></div></div>
<div class="ttc" id="class_z_order_htm_a19b2c9c306587267eef55d52cd5af971"><div class="ttname"><a href="../../d0/d85/class_z_order.htm#a19b2c9c306587267eef55d52cd5af971">ZOrder::addObject</a></div><div class="ttdeci">bool addObject(T object, int index)</div><div class="ttdoc">Adiciona um objeto ao índice informado. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d0e/_z_order_8hpp_source.htm#l00117">ZOrder.hpp:117</a></div></div>
<div class="ttc" id="class_z_order_htm"><div class="ttname"><a href="../../d0/d85/class_z_order.htm">ZOrder</a></div><div class="ttdoc">Grande classe problemática que dá ordem com qual os objetos serão exibidos na tela. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d0e/_z_order_8hpp_source.htm#l00024">ZOrder.hpp:24</a></div></div>
<div class="ttc" id="class_z_order_htm_a43a824416faef74f048f535c950a3716"><div class="ttname"><a href="../../d0/d85/class_z_order.htm#a43a824416faef74f048f535c950a3716">ZOrder::begin</a></div><div class="ttdeci">void begin()</div><div class="ttdoc">Move o ponteiro de exibição para o início da lista. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d0e/_z_order_8hpp_source.htm#l00202">ZOrder.hpp:202</a></div></div>
<div class="ttc" id="class_z_order_htm_a420e138b16bdd44f12577beed0b48db3"><div class="ttname"><a href="../../d0/d85/class_z_order.htm#a420e138b16bdd44f12577beed0b48db3">ZOrder::getTopIndex</a></div><div class="ttdeci">int getTopIndex()</div><div class="ttdoc">Obtém o maior índice usado no momento. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d0e/_z_order_8hpp_source.htm#l00250">ZOrder.hpp:250</a></div></div>
<div class="ttc" id="class_z_order_htm_ace2abe2010319522acd1154d82edba57"><div class="ttname"><a href="../../d0/d85/class_z_order.htm#ace2abe2010319522acd1154d82edba57">ZOrder::hasNext</a></div><div class="ttdeci">bool hasNext()</div><div class="ttdoc">Se há mais algum objeto na lista. </div><div class="ttdef"><b>Definition:</b> <a href="../../dd/d0e/_z_order_8hpp_source.htm#l00191">ZOrder.hpp:191</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Gerado em Sexta, 16 de Maio de 2014 15:14:12 para CrazyCrush por &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="../../doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>
